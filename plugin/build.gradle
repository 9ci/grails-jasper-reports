
apply plugin: 'yakworks.grails-plugin'
apply plugin: "org.grails.grails-gsp"

dependencies {
    profile "org.grails.profiles:web-plugin"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"

    def poiVersion='3.9'
    compile 'org.apache.poi:poi:'+poiVersion
    compile('org.apache.poi:poi-ooxml:'+poiVersion) {
      //  exclude module:"poi-ooxml-schemas"
    }
    //compile 'org.apache.poi:poi-ooxml-schemas:'+poiVersion
    //compile 'org.apache.poi:ooxml-schemas:1.3'

    compile('net.sf.jasperreports:jasperreports:6.3.1'){
        exclude module:'commons-logging'
        exclude module:'olap4j'
        exclude module:'jcommon'
        exclude module: 'jfreechart' //<-charts
        exclude module: 'itext' //exclude itext:2.1.7js5 which is not available in jcenter or maven central
    }

    compile group: 'com.lowagie', name: 'itext', version: '2.1.7'

    //the DejaVu sans font which is the recomended pacaked font for Jasper reports and pdf exporting
    compile('net.sf.jasperreports:jasperreports-fonts:6.0.0')

    compile('net.sourceforge.dynamicreports:dynamicreports-core:4.1.1'){
        exclude module:'jasperreports'
        exclude module:'barcode4j'
        exclude module: 'batik-bridge' //don't need the barcode stuff
    }

    compile 'org.grails.plugins:view-tools:1.2-SNAPSHOT'
    testCompile "org.grails:grails-plugin-testing"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

ext.codenarcRuleset= '''
  getRule('LineLength').enabled = false
  getRule('CyclomaticComplexity').enabled = false
  getRule('NoWildcardImports').enabled = false
  getRule('UnnecessaryDotClass').enabled = false
  getRule('CatchException').enabled = false
  getRule('AbcMetric').enabled = false
  getRule('MethodSize').enabled = false
  getRule('InvertedIfElse').enabled = false
  //getRule('Println').enabled = false
'''


codenarcMain {
    exclude '**/BootStrap.groovy'
    exclude '**/GormToolsGrailsPlugin.groovy'
    exclude '**/GormToolsPluginHelper.groovy'
}

codenarcTest {
    exclude '**/*'
    ignoreFailures = true
}

codenarcIntegrationTest {
    exclude '**/*'
    ignoreFailures = true
}
